package knowledge;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import java.util.concurrent.Semaphore;public class SemaphoreTest {    private static final int       THREAD_COUNT = 30;    private static ExecutorService threadPool   = Executors.newFixedThreadPool(THREAD_COUNT);    private static Semaphore       s            = new Semaphore(5);    public static void main(String[] args) {        for (int i = 0; i < THREAD_COUNT; i++) {            threadPool.execute(new Runnable() {                @Override                public void run() {                    try {                        s.acquire();                        System.out.println("许可证的数量：" + s.availablePermits());                        System.out.println("正在等待获取许可证的线程数："+ s.getQueueLength());                        Thread.sleep(3000);                        System.out.println(Thread.currentThread().getName()+" save data");                        s.release();                    } catch (InterruptedException e) {                    }                }            });        }        threadPool.shutdown();    }}