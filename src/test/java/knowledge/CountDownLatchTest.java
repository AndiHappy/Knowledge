package knowledge;import java.util.concurrent.CountDownLatch;/** *  * @author tengfei.fangtf * @version $Id: CountDownLatchTest.java, v 0.1 2015-8-1 ����12:08:52 tengfei.fangtf Exp $ */public class CountDownLatchTest {    static CountDownLatch c = new CountDownLatch(4);    public static void main(String[] args) throws InterruptedException {        new Thread(new Domino(c)).start();        new Thread(new Domino(c)).start();        new Thread(new Domino(c)).start();        new Thread(new Domino(c)).start();        c.await();        Thread.sleep(10000);        System.out.println("3");    }    static class Domino implements Runnable {      CountDownLatch c;      public Domino(CountDownLatch c) {          this.c = c;      }      public void run() {        System.out.println(Thread.currentThread().getName()+ " 执行结束");        c.countDown();        System.out.println("coutnDown 是阻塞的");      }  }}